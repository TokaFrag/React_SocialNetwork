{"version":3,"file":"static/js/321.729550e7.chunk.js","mappings":"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","sources":["webpack://social-networks/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js","webpack://social-networks/./src/components/common/FormsControls/FormsControl.module.css?deb2","components/common/FormsControls/FormsControl.js","hoc/withAuthRedirect.js","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__KoH3X\",\"dialogsItems\":\"Dialogs_dialogsItems__5fHn0\",\"active\":\"Dialogs_active__urEGJ\",\"messages\":\"Dialogs_messages__sQM3C\",\"message\":\"Dialogs_message__w-3s1\"};","import s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    const path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormsControls/FormsControl\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\nconst maxLengthCreator100 = maxLengthCreator(100)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tconst state = props.dialogsPage;\r\n\r\n\tconst dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>);\r\n\tconst messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n\tconst addNewMessage = (values) => {\r\n\t\tprops.sendMessage(values.newMessageBody);\r\n\t}\r\n\r\n\tconst AddMessageForm = (props) => {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\tcomponent={TextArea}\r\n\t\t\t\t\t\tname={'newMessageBody'}\r\n\t\t\t\t\t\tplaceholder='Enter your message'\r\n\t\t\t\t\t\tvalidate={[requiredField, maxLengthCreator100]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button>Send</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n\r\n\tconst AddMessageReduxForm = reduxForm({\r\n\t\tform: 'postAddMessageForm'\r\n\t})(AddMessageForm)\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogsItems}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.messages}>\r\n\t\t\t\t<div>{messagesElements}</div>\r\n\t\t\t\t<AddMessageReduxForm onSubmit={addNewMessage}/>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\r\n\t\tsendMessage: (newMessageBody) => {\r\n\t\t\tdispatch(sendMessageCreator(newMessageBody));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect)\r\n(Dialogs)\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form_control\":\"FormsControl_form_control__qJ-kI\",\"error\":\"FormsControl_error__CjKGg\"};","import React from \"react\";\r\nimport styles from './FormsControl.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n\tconst hasError = touched && error;\r\n\treturn (\r\n\t\t<div className={styles.form_control + ' ' + (hasError ? styles.error : '')}>\r\n\t\t\t<div>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t\t{hasError && <span>{error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n\tconst {input, meta, ...restProps} = props;\r\n\treturn <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n\tconst {input, meta, ...restProps} = props;\r\n\treturn <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (name, placeholder, validate, component, type, text = '', props = {}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Field\r\n\t\t\t\tname={name}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tvalidate={validate}\r\n\t\t\t\tcomponent={component}\r\n\t\t\t\ttype={type}\r\n\t\t\t\t{...props}/>{text}\r\n\t\t</div>\r\n\t)\r\n}","import React, {Component} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth\r\n\t}\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) {\r\n\t\t\t\treturn <Navigate to={'/login'}/>\r\n\t\t\t}\r\n\t\t\treturn <Component {...this.props}/>\r\n\t\t}\r\n\t}\r\n\r\n\tlet ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n\treturn ConnectedRedirectComponent;\r\n}","export const requiredField = value => {\r\n\tif (!value) return 'Field is required'\r\n\treturn undefined;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\tif (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n\treturn undefined;\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n\tif (value.length < minLength) return `Min length is ${minLength} symbols`\r\n\treturn undefined;\r\n}"],"names":["props","path","id","className","s","to","name","message","maxLengthCreator100","maxLengthCreator","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","requiredField","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","FormControl","input","meta","touched","error","children","hasError","styles","restProps","Input","createField","type","text","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React","value","maxLength","length","minLengthCreator","minLength"],"sourceRoot":""}