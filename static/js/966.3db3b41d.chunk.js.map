{"version":3,"file":"static/js/966.3db3b41d.chunk.js","mappings":"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","sources":["webpack://social-networks/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","webpack://social-networks/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-networks/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileContainer.js","webpack://social-networks/./src/components/common/FormsControls/FormsControl.module.css?deb2","components/common/FormsControls/FormsControl.js","hoc/withAuthRedirect.js","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3D6Aa\",\"userPhoto\":\"ProfileInfo_userPhoto__x4c+H\"};","import {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst [status, setStatus] = useState(props.status);\r\n\r\n\tuseEffect(()=>{\r\n\t\tsetStatus(props.status)\r\n\t},[props.status ]);\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t}\r\n\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false);\r\n\t\tprops.updateStatus(status);\r\n\t}\r\n\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value)\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span onClick={activateEditMode}>{props.status || 'No status'}</span>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input onChange={onStatusChange}\r\n\t\t\t\t\t\t   placeholder={'Ваш статус'}\r\n\t\t\t\t\t\t   autoFocus={true}\r\n\t\t\t\t\t\t   type=\"text\"\r\n\t\t\t\t\t\t   onBlur={deactivateEditMode}\r\n\t\t\t\t\t\t   defaultValue={props.status}/>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import s from './ProfileInfo.module.css';\r\nimport Spinner from \"../../common/Spinner/Spinner\";\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\tif (!profile) {\r\n\t\treturn <Spinner/>\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={s.descriptionBlock}>\r\n\t\t\t\t<input type={'image'} className={s.userPhoto}\r\n\t\t\t\t\t src={profile.photos.large ? profile.photos.large : userPhoto } alt={'photo'}/>\r\n\t\t\t\t<div>{profile.fullName}</div>\r\n\t\t\t\t<h3>Обо мне:</h3>\r\n\t\t\t\t<div>{profile.aboutMe}</div>\r\n\t\t\t\t<div>{profile.lookingForAJob ? 'Ищу работу.' : 'Не ищу работу.'} {profile.lookingForAJobDescription}</div>\r\n\t\t\t</div>\r\n\t\t\t<ProfileStatus status={status} updateStatus={updateStatus}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__i2t1o\",\"posts\":\"MyPosts_posts__JuS5N\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__IdMpA\"};","import s from './Post.module.css';\r\nimport myPhoto from '../../../../assets/images/man.png'\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={s.item}>\r\n\t\t\t<img src={myPhoto}/>\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>like</span> {props.likesCount}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post;","import React, {memo} from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControl\";\r\n\r\nconst maxLengthCreator30 = maxLengthCreator(30)\r\n\r\nconst AddNewPostForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field\r\n\t\t\t\t\tname={'newPostText'}\r\n\t\t\t\t\tcomponent={TextArea}\r\n\t\t\t\t\tplaceholder={'Enter your message'}\r\n\t\t\t\t\tvalidate={[requiredField, maxLengthCreator30]}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Add post</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n\tform: 'profileAddNewPostForm'\r\n})(AddNewPostForm)\r\n\r\nconst MyPosts = memo(props => {\r\n\tconst postsElements =\r\n\t\tprops.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id}/>);\r\n\r\n\tconst onAddPost = (values) => {\r\n\r\n\t\tprops.addPost(values.newPostText);\r\n\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={s.postsBlock}>\r\n\t\t\t<h3>My posts</h3>\r\n\t\t\t<AddNewPostReduxForm onSubmit={onAddPost}/>\r\n\t\t\t<div>\r\n\t\t\t\t{postsElements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n});\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tnewPostText: state.profilePage.newPostText,\r\n\t\tposts: state.profilePage.posts\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\r\n\t\taddPost: (newPostText) => {\r\n\t\t\tdispatch(addPostActionCreator(newPostText));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {useMatch} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match ? this.props.match.params.userId : this.props.authorizedUserId;\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\tthis.props.getStatus(userId);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<ProfileInfo {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n\t\t\t\t<MyPostsContainer/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst ProfileURLMatch = (props) => {\r\n\tconst match = useMatch('/profile/:userId/');\r\n\treturn <ProfileContainer {...props} match={match}/>;\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tprofile: state.profilePage.profile,\r\n\t\tstatus: state.profilePage.status,\r\n\t\tauthorizedUserId: state.auth.id,\r\n\t\tisAuth:state.auth.isAuth\r\n\t}\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {getUserProfile, getStatus, updateStatus }),\r\n\twithAuthRedirect)\r\n(ProfileURLMatch)","// extracted by mini-css-extract-plugin\nexport default {\"form_control\":\"FormsControl_form_control__qJ-kI\",\"error\":\"FormsControl_error__CjKGg\"};","import React from \"react\";\r\nimport styles from './FormsControl.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n\tconst hasError = touched && error;\r\n\treturn (\r\n\t\t<div className={styles.form_control + ' ' + (hasError ? styles.error : '')}>\r\n\t\t\t<div>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t\t{hasError && <span>{error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n\tconst {input, meta, ...restProps} = props;\r\n\treturn <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n\tconst {input, meta, ...restProps} = props;\r\n\treturn <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (name, placeholder, validate, component, type, text = '', props = {}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Field\r\n\t\t\t\tname={name}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tvalidate={validate}\r\n\t\t\t\tcomponent={component}\r\n\t\t\t\ttype={type}\r\n\t\t\t\t{...props}/>{text}\r\n\t\t</div>\r\n\t)\r\n}","import React, {Component} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth\r\n\t}\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) {\r\n\t\t\t\treturn <Navigate to={'/login'}/>\r\n\t\t\t}\r\n\t\t\treturn <Component {...this.props}/>\r\n\t\t}\r\n\t}\r\n\r\n\tlet ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n\treturn ConnectedRedirectComponent;\r\n}","export const requiredField = value => {\r\n\tif (!value) return 'Field is required'\r\n\treturn undefined;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\tif (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n\treturn undefined;\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n\tif (value.length < minLength) return `Min length is ${minLength} symbols`\r\n\treturn undefined;\r\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","value","placeholder","autoFocus","type","onBlur","updateStatus","defaultValue","profile","className","s","src","photos","large","userPhoto","alt","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Spinner","myPhoto","message","likesCount","maxLengthCreator30","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","TextArea","validate","requiredField","memo","postsElements","posts","map","p","id","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","Component","compose","auth","isAuth","withAuthRedirect","useMatch","FormControl","input","meta","touched","error","children","hasError","styles","restProps","Input","createField","text","mapStateToPropsForRedirect","RedirectComponent","to","React","maxLength","length","minLengthCreator","minLength"],"sourceRoot":""}